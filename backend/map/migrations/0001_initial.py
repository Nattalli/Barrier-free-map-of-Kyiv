# Generated by Django 4.1 on 2023-11-10 15:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AdjacentStreet",
            fields=[
                ("name", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("AVENUE", "Avenue"),
                            ("STREET", "Street"),
                            ("BYSTREET", "Bystreet"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CommitIssue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=63)),
                ("user_email", models.EmailField(max_length=254)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PROCESSED", "Processed"),
                            ("INPROCESSING", "Inprocessing"),
                            ("NEW", "New"),
                        ],
                        max_length=15,
                    ),
                ),
                ("date", models.DateTimeField()),
                ("issue", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Crosswalk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("UNDERGROUND", "Underground"),
                            ("OVERGROUND", "Overground"),
                            ("BY_ROAD", "By Road"),
                        ],
                        max_length=15,
                    ),
                ),
                ("GPS", models.CharField(max_length=255)),
                ("width_in_centimeters", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="CrosswalkDirection",
            fields=[
                (
                    "direction",
                    models.CharField(
                        choices=[
                            ("LEFT", "Left"),
                            ("RIGHT", "Right"),
                            ("TOP", "Top"),
                            ("BOTTOM", "Bottom"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("AVENUE", "Avenue"),
                            ("STREET", "Street"),
                            ("BYSTREET", "Bystreet"),
                        ],
                        max_length=10,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sidewalk",
            fields=[
                (
                    "id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("width_in_centimeters", models.IntegerField()),
                (
                    "commit_issues",
                    models.ManyToManyField(
                        related_name="sidewalks", to="map.commitissue"
                    ),
                ),
                (
                    "crosswalks",
                    models.ManyToManyField(
                        related_name="sidewalks", to="map.crosswalk"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SidewalkMap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "left",
                    models.ManyToManyField(related_name="left_maps", to="map.sidewalk"),
                ),
                (
                    "right",
                    models.ManyToManyField(
                        related_name="right_maps", to="map.sidewalk"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Street",
            fields=[
                (
                    "id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("AVENUE", "Avenue"),
                            ("STREET", "Street"),
                            ("BYSTREET", "Bystreet"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "central_walks",
                    models.ManyToManyField(
                        related_name="central_streets", to="map.sidewalk"
                    ),
                ),
                (
                    "end_with_names",
                    models.ManyToManyField(
                        related_name="ending_streets", to="map.adjacentstreet"
                    ),
                ),
                (
                    "sidewalks",
                    models.ManyToManyField(
                        related_name="streets", to="map.sidewalkmap"
                    ),
                ),
                (
                    "start_with_names",
                    models.ManyToManyField(
                        related_name="starting_streets", to="map.adjacentstreet"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SidewalkIssueBorder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("height_in_centimeters", models.IntegerField()),
                ("GPS", models.CharField(max_length=255)),
                (
                    "commit_issues",
                    models.ManyToManyField(
                        related_name="borders", to="map.commitissue"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SidewalkIssue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "borders",
                    models.ManyToManyField(
                        related_name="issues", to="map.sidewalkissueborder"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="sidewalk",
            name="issues",
            field=models.ManyToManyField(
                related_name="sidewalks", to="map.sidewalkissue"
            ),
        ),
        migrations.CreateModel(
            name="CrosswalkIssue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("border_height_in_centimeters", models.IntegerField()),
                (
                    "commit_issues",
                    models.ManyToManyField(
                        related_name="crosswalk_issues", to="map.commitissue"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CrosswalkBenefit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("LIFT", "Lift"),
                            ("SPECIAL_LIFT", "Special Lift"),
                            ("SOCIAL_WORKER", "Social Worker"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "commit_issues",
                    models.ManyToManyField(
                        related_name="benefits", to="map.commitissue"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="crosswalk",
            name="benefits",
            field=models.ManyToManyField(
                related_name="crosswalks", to="map.crosswalkbenefit"
            ),
        ),
        migrations.AddField(
            model_name="crosswalk",
            name="commit_issues",
            field=models.ManyToManyField(
                related_name="crosswalks", to="map.commitissue"
            ),
        ),
        migrations.AddField(
            model_name="crosswalk",
            name="direction",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="map.crosswalkdirection"
            ),
        ),
        migrations.AddField(
            model_name="crosswalk",
            name="issues",
            field=models.ManyToManyField(
                related_name="crosswalks", to="map.crosswalkissue"
            ),
        ),
    ]
